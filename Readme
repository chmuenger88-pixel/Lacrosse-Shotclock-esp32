Achtung noch keine Funktion!!!

ü•ç Lacrosse Shotclock (Eigenbau)

Dieses Projekt erm√∂glicht den eigenst√§ndigen Bau einer professionellen Shotclock- und Spielzeitanlage f√ºr Lacrosse, die √ºber eine intuitive Weboberfl√§che gesteuert wird. Die Anlage ist modular aufgebaut und kann flexibel f√ºr Spiele oder Training eingesetzt werden.

‚öôÔ∏è Funktionsweise

Das System besteht aus drei Hauptkomponenten: einem Master-Controller und zwei Anzeigemodulen.

    Master-Controller: Ein ESP32, der √ºber eine integrierte Webseite als zentrale Steuereinheit fungiert.

    Anzeigemodule: Zwei weitere ESP32, die die Befehle des Master-Controllers √ºber Funk empfangen und die Zeiten auf den LED-Panels anzeigen.

Die Kommunikation zwischen den Einheiten erfolgt drahtlos √ºber 433 MHz HC-12 Funkmodule, was eine zuverl√§ssige und latenzarme √úbertragung √ºber grosse Distanzen erm√∂glicht.

üì± Weboberfl√§che (UI)

Die Steuerung erfolgt vollst√§ndig √ºber ein Smartphone, Tablet oder Laptop, das sich mit dem Wi-Fi-Netzwerk des Master-Controllers verbindet.

Hauptfunktionen

    Shotclock: Starten, Stoppen, Zur√ºcksetzen und manuelle Korrektur der Zeit. Die Shotclock z√§hlt von 30 Sekunden r√ºckw√§rts.

    Spielzeit: Starten, Stoppen, Zur√ºcksetzen, Korrigieren und Weiterschalten zum n√§chsten Viertel.

    Punktestand: Z√§hler f√ºr Heim- und Gastteam mit der M√∂glichkeit zur Korrektur.

    Horn: Manuelle Aktivierung des Signals.

Einstellungsmodus (Setup)

√úber einen separaten Einstellungsbereich k√∂nnen folgende Parameter konfiguriert werden:

    Dauer der Shotclock (Standard: 30 Sekunden)

    Dauer der Viertel (Standard: 8 Minuten)

    Dauer von kurzen (Viertelpause) und langen (Halbzeitpause) Pausen

    Teamnamen (Heim und Gast)

    Trainingsmodus: Schaltet die Spielzeituhr aus und ersetzt sie durch die aktuelle Uhrzeit, w√§hrend die Shotclock weiterhin normal funktioniert.

üõ†Ô∏è Ben√∂tigtes Material

F√ºr den Aufbau der vollst√§ndigen Anlage werden folgende Komponenten ben√∂tigt:

    ESP32 DevKit: 3 St√ºck (1x Master, 2x Anzeigemodule)

    HC-12 Funkmodul: 3 St√ºck

    P10 LED-Panel (16x32px): 4 St√ºck (je 2 pro Anzeigemodul)

    Spannungsversorgung (5V):

        2 x 8A (f√ºr die Anzeigemodule)

        1 x 5A (f√ºr den Master-Controller)

    Horn (5V): 1 St√ºck

    Verbindungs- und Kabelmaterial

üíª Software und Installation

Die Software ist mit der Arduino IDE kompatibel und wurde erfolgreich getestet.

    Arduino IDE einrichten: Installieren Sie die Arduino IDE und f√ºgen Sie die ESP32-Board-Unterst√ºtzung hinzu.

    Bibliotheken installieren: F√ºgen Sie die erforderlichen Bibliotheken (FastLED, WiFi, WebServer, HardwareSerial) √ºber den Bibliotheksverwalter hinzu.

    Code kompilieren: Laden Sie den Master-Code auf den Master-ESP32 und den Empf√§nger-Code auf die beiden anderen ESP32.

    Hardware-Verkabelung: Verbinden Sie die Komponenten gem√§ss den Schaltpl√§nen.

üöÄ Geplante Erweiterungen

Dieses Projekt ist als modulare Plattform konzipiert und kann in Zukunft um n√ºtzliche Funktionen erweitert werden, um die Bedienung im Spielbetrieb weiter zu optimieren.

1. Gro√ües Master-Display f√ºr Spieler und Zuschauer

Anstelle eines kleinen Displays f√ºr den Bediener wird der Master-Controller um ein grosses, gut sichtbares Display erweitert, das die zentralen Spielinformationen f√ºr alle sichtbar anzeigt.

    Zweck: Bietet eine dritte, zentrale Anzeigeeinheit, die direkt am Zeitnehmertisch platziert werden kann.

    Anzeige:

        Spielzeit: Aktuelle Minuten und Sekunden in grosser, gut lesbarer Schrift.

        Viertel: Das aktuell laufende Viertel.

        Punktestand: Der aktuelle Spielstand von Heim- und Gastteam mit klaren Teamnamen.

    Hardware: Ein drittes P10 LED-Panel (16x32px), das √ºber denselben ESP32-Master-Controller wie die Weboberfl√§che betrieben wird. Dadurch wird keine zus√§tzliche Hardware f√ºr die Anzeige ben√∂tigt.

2. Funkhandsender und physische Buttons f√ºr die Shotclock

Die Steuerung √ºber eine Weboberfl√§che ist praktisch, aber bei schnellen Spielz√ºgen ist eine physische Steuerung reaktionsschneller und zuverl√§ssiger. Aus diesem Grund ist eine Erweiterung um dedizierte physische Taster geplant.

    Zweck: Schnelles und physisches Bedienen der wichtigsten Shotclock-Funktionen mit robusten Tastern.

    Funktionen:

        Start/Stopp: Pausiert oder startet die Shotclock.

        Reset: Setzt die Zeit sofort auf den voreingestellten Wert zur√ºck. Hierf√ºr ist die Verwendung eines Pilztasters ideal, da er gross und leicht zu bedienen ist und eine klare haptische R√ºckmeldung gibt.

        Horn: Ein separater Knopf f√ºr eine schnelle Hornaktivierung.

    Hardware: Ein weiterer ESP32 (oder ein kleinerer Mikrocontroller wie ein ESP8266) mit einem HC-12 Funkmodul, Pilztastern und Druckkn√∂pfen. Das Ger√§t w√ºrde √ºber eine Batterie betrieben und somit mobil einsetzbar sein.

Mit diesen Erweiterungen wird das System noch benutzerfreundlicher, da es die Vorteile einer flexiblen Weboberfl√§che mit der direkten Kontrolle physischer Tasten kombiniert und gleichzeitig eine zentrale Anzeige f√ºr alle Beteiligten bietet.

ü§ù Beitr√§ge

Beitr√§ge zum Projekt sind willkommen! Ob Codeverbesserungen, Bug-Reports oder die Erstellung von Schaltpl√§nen ‚Äì jeder Beitrag hilft, das Projekt zu optimieren.
